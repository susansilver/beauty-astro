---
import { getCollection } from 'astro:content';
import { Pagination, Card } from 'accessible-astro-components';
import BaseHead from '../../../components/base/BaseHead.astro';
import Header from '../../../components/base/Header.astro';
import Footer from '../../../components/base/Footer.astro';


export async function getStaticPaths({ paginate }) {
    const allPosts = await  getCollection('blog');
    let allCategories = allPosts
      .filter((f) => f.data.categories != undefined)
      .map((p) => p.data.categories);
    let allCategoriesUnique = [...new Set(allCategories.flat())];
    return allCategoriesUnique.map((category) => {
      const filteredPosts = allPosts.filter((post) => 
        post.data.categories.includes(category) && post.data.draft != true
      );
      return paginate(filteredPosts, {
        params: { category },
        pageSize: 6,
      });
    });
  }

  const { page } = Astro.props;
  const { params } = Astro;
  let url = "category/"+params.category;
  const capitalize = ([firstLetter, ...restOfWord]) =>
    firstLetter.toUpperCase() + restOfWord.join("");
 
---
    <html lang="en">
	<head>
		<BaseHead title={(params.category.toUpperCase().replace('-', ' '))} description={`Category archive for ${params.category.replace('-', ' ')}`} />
	</head>

	<body>
		<Header />
		<main>
      <h1 class="text-3xl p-5">Category: {(params.category.toUpperCase().replace('-', ' '))}</h1>


<h2 class="text-3xl p-5">Page {page.currentPage}</h2>

  <!--List the array of astronaut info-->
  <div class="md:grid lg:grid-cols-3 md:grid-cols-2 md:gap-4 md:mx-auto text-lg">
    {page.data
      .sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate))
      .map(blogPostEntry => (
        <div class="relative p-3">
          <Card
            url={`/${blogPostEntry.slug}`}
            img={blogPostEntry.data.heroImage}
            title={blogPostEntry.data.title}
            footer=""
    >
    <p class="m-5">{blogPostEntry.data.description}</p>
    
    </Card>
    <button><a href={`/${blogPostEntry.slug}`} class="absolute hidden md:flex bottom-5 right-5 btn">Read More</a></button>
      </div>
    ))}
</div>

<div class="flex justify-center m-5">

  <Pagination
  firstPage={page.url.prev ? '/blog' : null}
  previousPage={page.url.prev ? page.url.prev : null}
  nextPage={page.url.next ? page.url.next : null}
  lastPage={page.url.next ? `/blog/${Math.round(page.total / page.size)}` : null}
  currentPage={page.currentPage}
  totalPages={Math.round(page.total / page.size)}
/>
</div>

</main>
		<Footer />
	</body>
</html>

<style>
  .card__content h3 a {
    font-size: 2rem;
    color: #212121;
    font-weight: bold;
  }
</style>